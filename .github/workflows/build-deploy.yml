# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build, Test and Deploy Pipeline for Open Liberty + JEE

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Test with Maven
      run: mvn -B test --file pom.xml
      
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag actions-demo:latest
        docker tag actions-demo:latest ghcr.io/${{ github.repository_owner }}/actions-demo:latest

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker Image to GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository_owner }}/actions-demo:latest
      
    - name: Deploy to Hetzner
      env:
        HETZNER_HOST: ${{ secrets.HETZNER_HOST }}
        HETZNER_USERNAME: ${{ secrets.HETZNER_USERNAME }}
        HETZNER_SSH_KEY: ${{ secrets.HETZNER_SSH_KEY }}
      run: |
        # Write the SSH key to a file
        echo "$HETZNER_SSH_KEY" > deploy_key
        chmod 600 deploy_key

        # Create deployment script
        cat > deploy.sh << 'EOF'
        #!/bin/bash
        # Stop and remove existing container if it exists
        docker stop actions-demo || true
        docker rm actions-demo || true

        # Login to GitHub Container Registry
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        # Pull latest image
        docker pull ghcr.io/${{ github.repository_owner }}/actions-demo:latest

        # Run new container
        docker run -d \
          --name actions-demo \
          --restart unless-stopped \
          -p 9080:9080 \
          -p 9443:9443 \
          ghcr.io/${{ github.repository_owner }}/actions-demo:latest
        EOF

        # Copy deployment script to server
        scp -i deploy_key -o StrictHostKeyChecking=no deploy.sh $HETZNER_USERNAME@$HETZNER_HOST:/root/deploy.sh

        # Execute deployment script
        ssh -i deploy_key -o StrictHostKeyChecking=no $HETZNER_USERNAME@$HETZNER_HOST "chmod +x /root/deploy.sh && /root/deploy.sh"

    # Optional: Cleanup deployment key
    - name: Cleanup
      if: always()
      run: rm -f deploy_key

    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
